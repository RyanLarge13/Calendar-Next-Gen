generator client {
provider = "prisma-client-js"
}

datasource db {
provider = "postgresql"
url      = env("DATABASE_URL")
}

model User {
id            String         @id @default(uuid())
avatarUrl     String?
username      String
email         String         @unique
password      String
birthday      DateTime?
createAt      DateTime       @default(now())
notifSub      String[]
notifSubCanceled String[]
events        Event[]
reminders     Reminder[]
notifications Notification[]
list          List[]
tasks Task[]
kanbans Kanban[]
friends       Friend[]       @relation(name: "UserToFriends")
}

model Friend {
id String   @id @default(uuid())
createdAt DateTime @default(now())
user User     @relation(name: "UserToFriends", fields: [userId], references: [id])
userId String
}

model Event {
id String   @id @unique @default(uuid())
kind String?
summary String
description String?
location Json?
date String
reminders Json?
repeats Json?
attatchments Json?
color String
start Json
end Json
updated DateTime @updatedAt
created DateTime @default(now())
User User     @relation(fields: [userId], references: [id])
userId String
}

model Reminder {
id String @id @unique @default(uuid())
title String
notes String
time String
User User   @relation(fields: [userId], references: [id])
userId String
}

model Notification {
id String  @id @unique @default(uuid())
type String
time String
read Boolean @default(false)
readTime String?
notifData Json
User User    @relation(fields: [userId], references: [id])
sentNotification Boolean @default(false)
sentWebPush Boolean @default(false)
userId String
}

model List {
id String @id @unique @default(uuid())
title String
items Json?
color String
User User   @relation(fields: [userId], references: [id])
userId String
}

model Task {
id String @id @unique @default(uuid())
date String
tasks Json
completed Boolean
completedDate String
User User   @relation(fields: [userId], references: [id])
userId String
}

model Kanban {
id String @id @unique @default(uuid())
title String
color String
boards Board[]
createdAt DateTime @default(now())
User User   @relation(fields: [userId], references: [id])
userId String
}

model Board {
id String @id @unique @default(uuid())
title String
boardItems BoardItems[]
Project Kanban  @relation(fields: [projectId], references: [id])
projectId String
}

model BoardItems {
id String @id @unique @default(uuid())
Board Board @relation(fields: [boardId], references: [id])
boardId String
}